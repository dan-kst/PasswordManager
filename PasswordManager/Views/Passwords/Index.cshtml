@using PasswordManager.Models.Classes
@{
	@model IEnumerable<SecretBase>
	ViewData["Title"] = "Passwords";
}

<h1>Your Passwords</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table table-bordered table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Value)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SecretType)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SecretType)
                </td>
                <td>
                    <a asp-action="EditPassword" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="ViewPassword" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="DeletePassword" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>